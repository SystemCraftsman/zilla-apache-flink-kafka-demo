name: Example
vaults: {}
bindings:
  tcp_server0:
    type: tcp
    kind: server
    options:
      host: 0.0.0.0
      port: 8080
    exit: http_server0
  http_server0:
    type: http
    kind: server
    options:
      access-control:
        policy: cross-origin
    routes:
      - when:
          - headers:
              :method: GET
              :path: /tasks
        exit: sse_server0
      - when:
          - headers:
              :method: POST
              :path: /tasks
          - headers:
              :method: PUT
              :path: /tasks/*
          - headers:
              :method: DELETE
              :path: /tasks/*
        exit: http-kafka_proxy0
  sse_server0:
    type: sse
    kind: server
    exit: sse-kafka_proxy0
  sse-kafka_proxy0:
    type: sse-kafka
    kind: proxy
    routes:
      - when:
          - path: /tasks
        exit: kafka_cache_client0
        with:
          event:
            id: '["${base64(key)}","${etag}"]'
          topic: task-snapshots
  http-kafka_proxy0:
    type: http-kafka
    kind: proxy
    routes:
      - when:
          - method: POST
            path: /tasks
        exit: kafka_cache_client0
        with:
          capability: produce
          topic: task-commands
          key: ${idempotencyKey}
          overrides:
            command-type: CREATE
      - when:
          - method: PUT
            path: /tasks/{id}
        exit: kafka_cache_client0
        with:
          capability: produce
          topic: task-commands
          key: ${params.id}
          overrides:
            command-type: UPDATE
      - when:
          - method: DELETE
            path: /tasks/{id}
        exit: kafka_cache_client0
        with:
          capability: produce
          topic: task-commands
          key: ${params.id}
          overrides:
            command-type: DELETE
  kafka_cache_client0:
    type: kafka
    kind: cache_client
    exit: kafka_cache_server0
  kafka_cache_server0:
    type: kafka
    kind: cache_server
    options:
      bootstrap:
        - task-snapshots
    exit: kafka_client0
  kafka_client0:
    type: kafka
    kind: client
    exit: tcp_client0
  tcp_client0:
    type: tcp
    kind: client
    options:
      host: kafka.internal.net
      port: 29092
    routes:
      - when:
          - cidr: 0.0.0.0/0
guards: {}
